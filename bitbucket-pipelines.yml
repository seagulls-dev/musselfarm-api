image: php:7.4-cli

definitions:
  services:
    docker:
      memory: 3000

pipelines:
  branches:
    feature/faster-deployment:
      - step:
          name: Build
          size: 2x
          script:
            - export IMAGE_NAME=$DOCKER_HUB_USERNAME/$APPLICATION_NAME:base-$BITBUCKET_COMMIT
            - docker build -t $IMAGE_NAME -f base.Dockerfile .
            - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
            - docker push $IMAGE_NAME
          services:
            - docker
    develop:
      - step:
          name: Set env
          script:
            - php -r "copy('.env.example', '.env');"
            - sed -i "s|APP_NAME=Laravel|APP_NAME='Marine Farming API'|g" .env
            - sed -i "s|APP_ENV=local|APP_ENV=local|g" .env
            - sed -i "s|APP_URL=http://localhost|APP_URL=https://$DEV_URL|g" .env
            - sed -i "s|DB_CONNECTION=mysql|DB_CONNECTION=pgsql|g" .env
            - sed -i "s|DB_HOST=127.0.0.1|DB_HOST=postgres|g" .env
            - sed -i "s|DB_PORT=3306|DB_PORT=5432|g" .env
            - sed -i "s|DB_DATABASE=laravel|DB_DATABASE='mf_api'|g" .env
            - sed -i "s|DB_USERNAME=root|DB_USERNAME='mf_api'|g" .env
            - sed -i "s|DB_PASSWORD=|DB_PASSWORD=$STAGING_DB_PASSWORD|g" .env
            - sed -i "s|MAIL_FROM_ADDRESS=null|MAIL_FROM_ADDRESS='no-reply@$STAGING_MAILGUN_DOMAIN'|g" .env
            - sed -i "s|MAILGUN_DOMAIN=|MAILGUN_DOMAIN=$STAGING_MAILGUN_DOMAIN|g" .env
            - sed -i "s|MAILGUN_SECRET=|MAILGUN_SECRET=$STAGING_MAILGUN_SECRET|g" .env
            - sed -i "s|MAILGUN_ENDPOINT=|MAILGUN_ENDPOINT=$STAGING_MAILGUN_ENDPOINT|g" .env
            - sed -i "s|STRIPE_KEY=|STRIPE_KEY=$STAGING_STRIPE_KEY|g" .env
            - sed -i "s|STRIPE_SECRET=|STRIPE_SECRET=$STAGING_STRIPE_SECRET|g" .env
            - sed -i "s|STRIPE_WEBHOOK_SECRET=|STRIPE_WEBHOOK_SECRET=$STAGING_STRIPE_WEBHOOK_SECRET|g" .env
            - sed -i "s|FRONT_END_URL=|FRONT_END_URL=https://mf.dev.outright.xyz|g" .env
            - sed -i "s|API_URL=|API_URL=https://api.mf.dev.outright.xyz/oauth/token|g" .env
          artifacts:
            - .env
#      - step:
#          name: Build PhpPgAdmin
#          size: 2x
#          script:
#            - export IMAGE_NAME=$DOCKER_HUB_USERNAME/$APPLICATION_NAME-phppgadmin:$BITBUCKET_COMMIT
#            - docker build -t $IMAGE_NAME -f phppgadmin/Dockerfile phppgadmin/.
#            - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
#            - docker push $IMAGE_NAME
#          services:
#            - docker
#      - step:
#          name: Build PhpPgAdmin Nginx
#          size: 2x
#          script:
#            - sed -i "s|{{host}}|db.$DEV_URL|g" phppgadmin/nginx/nginx.conf
#            - export IMAGE_NAME=$DOCKER_HUB_USERNAME/$APPLICATION_NAME-phppgadmin-nginx:$BITBUCKET_COMMIT
#            - docker build -t $IMAGE_NAME -f phppgadmin/nginx/Dockerfile phppgadmin/nginx/.
#            - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
#            - docker push $IMAGE_NAME
#          services:
#            - docker
      - step:
          name: Build
          size: 2x
          script:
            - export IMAGE_NAME=$DOCKER_HUB_USERNAME/$APPLICATION_NAME:$BITBUCKET_COMMIT
            - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD && docker build -t $IMAGE_NAME .
            - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD && docker push $IMAGE_NAME
          services:
            - docker
      - step:
          name: Build Nginx
          size: 2x
          script:
            - sed -i "s|{{host}}|$DEV_URL|g" nginx/nginx.conf
            - export IMAGE_NAME=$DOCKER_HUB_USERNAME/$APPLICATION_NAME-nginx:$BITBUCKET_COMMIT
            - docker build -t $IMAGE_NAME -f nginx/Dockerfile nginx
            - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
            - docker push $IMAGE_NAME
          services:
            - docker
      - step:
          name: Deploy
          deployment: staging
          script:
            - rm -rf config
            - sed -i "s|{{host}}|$DEV_URL|g" laravel-deployment.yaml
#            - sed -i "s|{{host}}|$DEV_URL|g" phppgadmin-deployment.yaml
#            - sed -i "s|{{phppgadmin_image}}|$DOCKER_HUB_USERNAME/$APPLICATION_NAME-phppgadmin:$BITBUCKET_COMMIT|g" phppgadmin-deployment.yaml
#            - sed -i "s|{{phppgadmin_nginx_image}}|$DOCKER_HUB_USERNAME/$APPLICATION_NAME-phppgadmin-nginx:$BITBUCKET_COMMIT|g" phppgadmin-deployment.yaml
#            - sed -i "s|{{dockerconfigjson}}|$dockerconfigjson|g" phppgadmin-deployment.yaml
            - sed -i "s|{{image}}|$DOCKER_HUB_USERNAME/$APPLICATION_NAME:$BITBUCKET_COMMIT|g" laravel-deployment.yaml
            - sed -i "s|{{nginx_image}}|$DOCKER_HUB_USERNAME/$APPLICATION_NAME-nginx:$BITBUCKET_COMMIT|g" laravel-deployment.yaml
            - sed -i "s|{{dockerconfigjson}}|$dockerconfigjson|g" laravel-deployment.yaml
            - sed -i "s|{{DB_PASSWORD}}|$STAGING_DB_PASSWORD|g" postgres-deployment.yaml
            - sed -i "s|{{DB_USERNAME}}|'mf_api'|g" postgres-deployment.yaml
            - sed -i "s|{{DB_DATABASE}}|'mf_api'|g" postgres-deployment.yaml
            - pipe: atlassian/google-gke-kubectl-run:1.3.0
              variables:
                KEY_FILE: $GCLOUD_API_KEYFILE
                PROJECT: $GCLOUD_PROJECT
                COMPUTE_ZONE: $GCLOUD_COMPUTE_ZONE
                CLUSTER_NAME: $GCLOUD_CLUSTER_NAME
                KUBECTL_COMMAND: 'apply'
                RESOURCE_PATH: 'postgres-deployment.yaml'
#            - pipe: atlassian/google-gke-kubectl-run:1.3.0
#              variables:
#                KEY_FILE: $GCLOUD_API_KEYFILE
#                PROJECT: $GCLOUD_PROJECT
#                COMPUTE_ZONE: $GCLOUD_COMPUTE_ZONE
#                CLUSTER_NAME: $GCLOUD_CLUSTER_NAME
#                KUBECTL_COMMAND: 'apply'
#                RESOURCE_PATH: 'phppgadmin-deployment.yaml'
            - pipe: atlassian/google-gke-kubectl-run:1.3.0
              variables:
                KEY_FILE: $GCLOUD_API_KEYFILE
                PROJECT: $GCLOUD_PROJECT
                COMPUTE_ZONE: $GCLOUD_COMPUTE_ZONE
                CLUSTER_NAME: $GCLOUD_CLUSTER_NAME
                KUBECTL_COMMAND: 'apply'
                RESOURCE_PATH: 'laravel-deployment.yaml'
    stable:
      - step:
          name: Set env
          script:
            - php -r "copy('.env.example', '.env');"
            - sed -i "s|APP_NAME=Laravel|APP_NAME='Marine Farming API'|g" .env
            - sed -i "s|APP_ENV=local|APP_ENV=local|g" .env
            - sed -i "s|APP_URL=http://localhost|APP_URL=https://$STAGING_URL|g" .env
            - sed -i "s|DB_CONNECTION=mysql|DB_CONNECTION=pgsql|g" .env
            - sed -i "s|DB_HOST=127.0.0.1|DB_HOST=postgres-stable|g" .env
            - sed -i "s|DB_PORT=3306|DB_PORT=5432|g" .env
            - sed -i "s|DB_DATABASE=laravel|DB_DATABASE='mf_api'|g" .env
            - sed -i "s|DB_USERNAME=root|DB_USERNAME='mf_api'|g" .env
            - sed -i "s|DB_PASSWORD=|DB_PASSWORD=$STAGING_DB_PASSWORD|g" .env
            - sed -i "s|MAIL_FROM_ADDRESS=null|MAIL_FROM_ADDRESS='no-reply@$STAGING_MAILGUN_DOMAIN'|g" .env
            - sed -i "s|MAILGUN_DOMAIN=|MAILGUN_DOMAIN=$STAGING_MAILGUN_DOMAIN|g" .env
            - sed -i "s|MAILGUN_SECRET=|MAILGUN_SECRET=$STAGING_MAILGUN_SECRET|g" .env
            - sed -i "s|MAILGUN_ENDPOINT=|MAILGUN_ENDPOINT=$STAGING_MAILGUN_ENDPOINT|g" .env
            - sed -i "s|STRIPE_KEY=|STRIPE_KEY=$STAGING_STRIPE_KEY|g" .env
            - sed -i "s|STRIPE_SECRET=|STRIPE_SECRET=$STAGING_STRIPE_SECRET|g" .env
            - sed -i "s|STRIPE_WEBHOOK_SECRET=|STRIPE_WEBHOOK_SECRET=$STAGING_STRIPE_WEBHOOK_SECRET|g" .env
            - sed -i "s|FRONT_END_URL=|FRONT_END_URL=https://marine-farming.outright.xyz|g" .env
            - sed -i "s|API_URL=|API_URL=https://marine-farming-api.outright.xyz/oauth/token|g" .env
          artifacts:
            - .env
      - step:
          name: Build
          size: 2x
          script:
            - export IMAGE_NAME=$DOCKER_HUB_USERNAME/$APPLICATION_NAME:$BITBUCKET_COMMIT
            - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD && docker build -t $IMAGE_NAME .
            - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD && docker push $IMAGE_NAME
          services:
            - docker
      - step:
          name: Build Nginx
          size: 2x
          script:
            - sed -i "s|{{host}}|$STAGING_URL|g" nginx/nginx.conf
            - export IMAGE_NAME=$DOCKER_HUB_USERNAME/$APPLICATION_NAME-nginx:$BITBUCKET_COMMIT
            - docker build -t $IMAGE_NAME -f nginx/Dockerfile nginx
            - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
            - docker push $IMAGE_NAME
          services:
            - docker
      - step:
          name: Deploy
          deployment: staging
          script:
            - rm -rf config
            - sed -i "s|{{host}}|$STAGING_URL|g" laravel-deployment.stable.yaml
            - sed -i "s|{{image}}|$DOCKER_HUB_USERNAME/$APPLICATION_NAME:$BITBUCKET_COMMIT|g" laravel-deployment.stable.yaml
            - sed -i "s|{{nginx_image}}|$DOCKER_HUB_USERNAME/$APPLICATION_NAME-nginx:$BITBUCKET_COMMIT|g" laravel-deployment.stable.yaml
            - sed -i "s|{{dockerconfigjson}}|$dockerconfigjson|g" laravel-deployment.stable.yaml
            - sed -i "s|{{DB_PASSWORD}}|$STAGING_DB_PASSWORD|g" postgres-deployment.stable.yaml
            - sed -i "s|{{DB_USERNAME}}|'mf_api'|g" postgres-deployment.stable.yaml
            - sed -i "s|{{DB_DATABASE}}|'mf_api'|g" postgres-deployment.stable.yaml
            - pipe: atlassian/google-gke-kubectl-run:1.3.0
              variables:
                KEY_FILE: $GCLOUD_API_KEYFILE
                PROJECT: $GCLOUD_PROJECT
                COMPUTE_ZONE: $GCLOUD_COMPUTE_ZONE
                CLUSTER_NAME: $GCLOUD_CLUSTER_NAME
                KUBECTL_COMMAND: 'apply'
                RESOURCE_PATH: 'postgres-deployment.stable.yaml'
            - pipe: atlassian/google-gke-kubectl-run:1.3.0
              variables:
                KEY_FILE: $GCLOUD_API_KEYFILE
                PROJECT: $GCLOUD_PROJECT
                COMPUTE_ZONE: $GCLOUD_COMPUTE_ZONE
                CLUSTER_NAME: $GCLOUD_CLUSTER_NAME
                KUBECTL_COMMAND: 'apply'
                RESOURCE_PATH: 'laravel-deployment.stable.yaml'
